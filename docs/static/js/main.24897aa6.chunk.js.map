{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGif","category","a","url","fetch","response","json","data","gifts","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAwB9C,OACI,sBAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAzBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,sEAGRC,EAHQ,0FAGiFF,EAHjF,sBAKSG,MAAMD,GALf,cAKRE,EALQ,gBAMSA,EAASC,OANlB,uBAMNC,EANM,EAMNA,KAEFC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAZ5B,kBAgBPK,GAhBO,yCAkBdO,QAAQC,IAAR,MAlBc,kBAmBP,IAnBO,0DAAH,sDCENC,EAAc,SAAC,GAAiB,IAAhBL,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAC/B,OACI,sBAAKe,UAAU,yCAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECCb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BoB,KAAO,GACPe,SAAU,IAJwB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACNzB,EAAOC,GACFyB,MAAM,SAAAb,GACHW,EAAS,CACLjB,KAAOM,EACPS,SAAU,SAGvB,CAACrB,IAEGsB,EDhBuBI,CAAa1B,GAA/BY,EAFyB,EAE9BN,KAAYe,EAFkB,EAElBA,QAEnB,OACI,qCACA,6BAAKrB,IAEJqB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAGQL,EAAOJ,KAAI,SAAAmB,GAAK,OACZ,cAAC,EAAD,eAEIA,GADGA,EAAMjB,aEdlB,SAASkB,IAAgB,IAAD,EAEC1C,mBAAS,IAFV,mBAE5BQ,EAF4B,KAEhBT,EAFgB,KAInC,OACI,qCACI,8CAGA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWc,KAAI,SAACR,EAAU6B,GAAX,OACX,cAAC,EAAD,CAEA7B,SAAYA,GADLA,W,MCb/B8B,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,W","file":"static/js/main.24897aa6.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState(''); //si no pongo un string vacío, el estado será undefined\n\n    const handleInputChange = e => {\n        setinputValue(e.target.value)\n    }\n\n   /*  const handleSubmit_beta = e => {\n        e.preventDefault();\n        setCategories([...categories, e.target.elements[0].value])\n    } */\n\n    /* puedo llamar a método setCategories pasandole como argumento un callback */\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            /* primero inserto lo agregado y luego muestro lo existente*/\n            setCategories(categories => [inputValue, ...categories]);\n            setinputValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}\n","export const getGif = async (category) => {\n\n    try {\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=bWo4v44iCpufFV5TQfL4zwsKdTHwBPUg&q=${category}&limit=10`;\n\n        const response = await fetch(url);\n        const { data } = await response.json();\n    \n        const gifts = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n    \n        return gifts\n    } catch (error) {\n        console.log(error)\n        return []\n    }\n   \n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n        <h3>{category}</h3>\n\n        {loading && <p>loading</p>}\n\n        <div className=\"card-grid\">\n          \n            {\n                images.map(image => (\n                    <GifGridItem \n                    key = {image.id}\n                    {...image}\n                    />\n                ))\n            }\n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGif } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data : [],\n        loading : true\n    })\n    \n    useEffect(() => {\n        getGif(category)\n            .then( images => {\n                setState({\n                    data : images,\n                    loading : false\n                })\n            })\n    }, [category])\n\n    return state\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport default function GifExpertApp() {\n\n    const [categories, setCategories] = useState([]);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n            {/* envío la referencia al componente hijo de la función setCategories */}\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map((category, index) => (\n                        <GifGrid \n                        key = {category}\n                        category = {category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}